function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function dropLine() {
    file=${1}
    pattern=${2}
    lineNumber=$(grep -n -m 1 "$pattern" ${file} | cut -d : -f 1)
    if [[ ! -z "$lineNumber" ]]; then
        sed -i "${lineNumber}d" ${file}
    fi
}

function fds() {
  preview="git diff $@ --color=always {1} | delta "
  git diff $@ --name-only | fzf --header "Changed files" --preview $preview | pbcopy
}

function gb() {
  git branch --sort=-committerdate | fzf --header "Checkout Recent Branch" --preview "git diff --color=always {1} | delta" --pointer="îœ¥" | xargs git checkout
}

# Create a new directory and enter it
function mkd() {
   mkdir -p "$@" && cd "$@"
}


function weather() {
   city="$1"

   if [ -z "$city" ]; then
      city="berlin"
   fi

   eval "curl http://wttr.in/${city}"
}


#  Commit everything
function gc() {
  commitMessage="$1"

  if [ "$commitMessage" = "" ]; then
     commitMessage="wip"
  fi

  git add .
  eval "git commit -a -m '${commitMessage}'"
}

function toggle_layout() {
  CURRENT_LAYOUT=$(yabai -m query --spaces --space | jq '.type')
  if [ $CURRENT_LAYOUT = '"stack"' ]; then
    yabai -m space --layout bsp
  else
    yabai -m space --layout stack
  fi
}

function rwm(){
  aerospace reload-config
  brew services restart sketchybar
}

function ns(){
  fileName="$HOME/Dropbox/arch_linux/org/$(date +'%d_%m_%Y_%A').org"
  nvim $fileName
}


function ms(){
  yabai -m window --toggle float --grid 4:4:1:1:2:2
  yabai -m window --toggle sticky
  yabai -m window --toggle topmost
  ns
}


function t(){
  FOLDER=$(basename $(pwd))
  SESSION_NAME=$(echo "$FOLDER" | tr ' ' '_' | tr '.' '_')
  SESSION=$(tmux list-sessions | grep -F "$SESSION_NAME" | awk '{print $1}') # find existing session
  SESSION=${SESSION//:/} # grab session name
  if [ "$TMUX" = "" ]; then # if not currently in tmux
    if [ "$SESSION" = "" ]; then # session does not exist
        cd $(pwd) || exit 1 # jump to directory
        tmux new-session -s "$SESSION_NAME" # create session and attach
    else # session exists
        tmux attach -t "$SESSION" # attach to session
    fi
  else # currently in tmux
      if [ "$SESSION" = "" ]; then # session does not exist
          cd $(pwd) || exit 1 # jump to directory
          tmux new-session -d -s "$SESSION_NAME" # create session
          tmux switch-client -t "$SESSION_NAME" # attach to session
      else # session exists
          tmux switch-client -t "$SESSION" # switch to session
      fi
  fi
}
